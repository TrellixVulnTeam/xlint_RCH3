#!/usr/bin/env python3
# Copyright 2013 Daniel Narvaez
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import fnmatch
import os
import subprocess
import sys

base_dir = os.path.dirname(os.path.realpath(__file__))
linters_dir = os.path.join(base_dir, "linters")

def get_python_bin(bin_name):
    return os.path.join(linters_dir, "python", "bin", bin_name)


def lint_python(file_path):
    print("Running pylint on %s" % file_path)
    subprocess.check_call([get_python_bin("pep8"), file_path])
               
    print("Running pyflakes on %s" % file_path)
    subprocess.check_call([get_python_bin("pyflakes"), file_path])


def lint_js(file_path):
    print("Running jshint on %s" % file_path)

    linter = os.path.join(linters_dir, "node", "lib", "node_modules",
                          "jshint", "bin", "jshint")

    subprocess.check_call([linter, file_path])


def lint_html(file_path):
    print("Running html5-lint on %s" % file_path)
    subprocess.check_call([get_python_bin("html5check.py"), file_path])
                           

def lint(path):
    for dirpath, dirnames, filenames in os.walk(path):
        for filename in filenames:
            file_path = os.path.join(dirpath, filename)
            if fnmatch.fnmatch(filename, "*.py"):
                lint_python(file_path)
            elif fnmatch.fnmatch(filename, "*.js"):
                lint_js(file_path)
            elif fnmatch.fnmatch(filename, "*.html"):
                lint_html(file_path)


def main():
    parser = argparse.ArgumentParser(description="Lint code")
    parser.add_argument("path", nargs="?", default=os.getcwd())
    args = parser.parse_args()

    try:
        lint(args.path)
    except subprocess.CalledProcessError:
        sys.exit(1)


main()
